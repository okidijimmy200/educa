Rendering and Caching Content
you will:
• Create public views for displaying course information
• Build a student registration system
• Manage student enrollment onto courses
• Render diverse content for course modules
• Install and configure Memcached
• Cache content using the Django cache framework
• Monitor Memcached using the django-memcache-status

Lecture 1:
Displaying courses
--For your course catalog, you have to build the following functionalities:
• List all available courses, optionally filtered by subject
• Display a single course overview.

Lecture 3:
Adding student registration::
**********python manage.py startapp students***********

Creating a student registration view::
--open http://127.0.0.1:8000/students/register/ in your browser. You should see a registration form

Lecture 2:
Enrolling on courses
--After users create an account, they should be able to enroll on courses. In order
to store enrollments, you need to create a many-to-many relationship between the
Course and User models.

*********python manage.py makemigrations***********

*****python manage.py migrate*******

--Let's add the enroll button form to the course overview page.
--open http://127.0.0.1:8000/
in your browser, and click a course. If you are logged in, you should see an ENROLL
NOW button placed below the course overview

Lecture 3:
Accessing the course contents::
--You need a view for displaying the courses that students are enrolled on, and a
view for accessing the actual course contents.

--is the setting used by the auth module to redirect the student after a successful
login if no next parameter is present in the request

