Rendering and Caching Content
you will:
• Create public views for displaying course information
• Build a student registration system
• Manage student enrollment onto courses
• Render diverse content for course modules
• Install and configure Memcached
• Cache content using the Django cache framework
• Monitor Memcached using the django-memcache-status

Lecture 1:
Displaying courses
--For your course catalog, you have to build the following functionalities:
• List all available courses, optionally filtered by subject
• Display a single course overview.

Lecture 3:
Adding student registration::
**********python manage.py startapp students***********

Creating a student registration view::
--open http://127.0.0.1:8000/students/register/ in your browser. You should see a registration form

Lecture 2:
Enrolling on courses
--After users create an account, they should be able to enroll on courses. In order
to store enrollments, you need to create a many-to-many relationship between the
Course and User models.

*********python manage.py makemigrations***********

*****python manage.py migrate*******

--Let's add the enroll button form to the course overview page.
--open http://127.0.0.1:8000/
in your browser, and click a course. If you are logged in, you should see an ENROLL
NOW button placed below the course overview

Lecture 3:
Accessing the course contents::
--You need a view for displaying the courses that students are enrolled on, and a
view for accessing the actual course contents.

--is the setting used by the auth module to redirect the student after a successful
login if no next parameter is present in the request

Lecture 4:
Rendering different types of content::
--You need to provide a way to render each type of content. Edit the models.py file
of the courses application and add the following render() method to the ItemBase
model:

--For files uploaded with ImageField and
FileField to work, you need to set up your project to serve media files with the
development server.

--You also have to create a template for rendering Video objects. You will use djangoembed-
video for embedding video content.

*********pip install django-embed-video==1.3.2************

--access http://127.0.0.1:8000/course/mine/ in your browser. Access the site with a user belonging to the Instructors
group, and add multiple contents to a course. To include video content,
you can just copy any YouTube URL, such as https://www.youtube.com/
watch?v=bgV39DlmZ2U, and include it in the url field of the form.

--After adding contents to the course, open http://127.0.0.1:8000/, click the
course, and click on the ENROLL NOW button. You should be enrolled on
the course and redirected to the student_course_detail URL.

